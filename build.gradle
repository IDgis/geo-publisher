subprojects {
	apply plugin: 'java-base'
	
	repositories {
		jcenter()
		mavenCentral()
		maven {
			name "typesafe-maven-release"
			url "https://repo.typesafe.com/typesafe/maven-releases"
		}
		ivy {
			name "typesafe-ivy-release"
			url "https://repo.typesafe.com/typesafe/ivy-releases"
			layout "ivy"
		}
		maven {
			name "idgis-public"
			url "http://nexus.idgis.eu/content/groups/public/"
			credentials {
				username nexusUser 
				password nexusPassword
			}
		}
		maven {
			name "idgis-restricted"
			url "http://nexus.idgis.eu/content/groups/restricted/"
			credentials {
				username nexusUser 
				password nexusPassword
			}
		}
	}
}

def junitVersion = '4.11'
def scalaAbiVersion = '2.11'
def akkaVersion = '2.3.9'
def jacksonVersion = '2.3.3'
def guavaVersion = '17.0'
def h2Version = '1.4.180'
def jodatimeVersion = '2.3'
def querydslVersion = '3.4.1'
def geoserverVersion = '2.6.1-gpo-3'

project(':publisher-test') {
	apply plugin: 'java'

	dependencies {
		compile "com.typesafe.akka:akka-actor_${scalaAbiVersion}:${akkaVersion}"
		compile "junit:junit:${junitVersion}"
		compile 'org.mockito:mockito-core:1.10.19'
	}
}

project(':publisher-commons') {
	apply plugin: 'java'

	dependencies {
		testCompile project(':publisher-test')
		testCompile "com.typesafe.akka:akka-testkit_${scalaAbiVersion}:${akkaVersion}"
		testCompile "com.typesafe.akka:akka-slf4j_${scalaAbiVersion}:${akkaVersion}"
		testCompile 'ch.qos.logback:logback-classic:1.1.2'
		testCompile "com.h2database:h2:${h2Version}"
	
		compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
		compile "com.typesafe.akka:akka-actor_${scalaAbiVersion}:${akkaVersion}"
		compile 'org.apache.commons:commons-lang3:3.3.2'
		compile "com.google.guava:guava:${guavaVersion}"
		compile 'com.jolbox:bonecp:0.8.0.RELEASE'
		compile 'commons-io:commons-io:2.4'
		compile 'org.aspectj:aspectjrt:1.8.0'
		compile 'org.codehaus.woodstox:woodstox-core-lgpl:4.1.5'
	}
}

project(':publisher-domain') {
	apply plugin: 'java'

	dependencies {
		testCompile "junit:junit:${junitVersion}"
	
		compile project(':publisher-commons');
		compile "com.google.guava:guava:${guavaVersion}"
		compile "com.mysema.querydsl:querydsl-core:${querydslVersion}"
		compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
		compile "joda-time:joda-time:${jodatimeVersion}"
		compile "com.typesafe.akka:akka-actor_${scalaAbiVersion}:${akkaVersion}"
	}
}

project(':publisher-schemas') {
	apply plugin: 'java'

	configurations {
		schemas {
			transitive = false
		}
	}
	
	dependencies {
		testCompile "junit:junit:${junitVersion}"
		
		schemas "org.geoserver:gs-main:${geoserverVersion}"
	}
	
	task unpackSchemas << {
		configurations.schemas.resolvedConfiguration.resolvedArtifacts.each { artifact ->
			project.copy {
				from zipTree(artifact.file).matching {
					include 'schemas/**/*'
				}
				eachFile {
					it.path = it.path.replace('schemas/', 'schemas/geoserver/')
				}
				includeEmptyDirs = false
				into sourceSets.main.output.resourcesDir
			}
		}
	}
	
	processResources.dependsOn(unpackSchemas)
}

project(':publisher-web') {
	apply plugin: PublisherPlay
	
	configurations {
		compile
		testCompile
		play.extendsFrom(compile)
		playTest.extendsFrom(testCompile)
	}
	
	def playVersion = '2.3.4'
	
	model {
		components {
			play {
				platform play: playVersion, java: '1.8'
			}
		}
	}
	
	dependencies {
		play project(':publisher-domain')
		play project(':publisher-schemas')
		play "com.typesafe.play:play-java-jdbc_${scalaAbiVersion}:${playVersion}"
		play "com.typesafe.play:play-cache_${scalaAbiVersion}:${playVersion}"
		play "com.typesafe.play:play-java-ws_${scalaAbiVersion}:${playVersion}"
		play "org.webjars:webjars-play_${scalaAbiVersion}:2.3.0"
		play 'org.webjars:bootstrap:3.2.0'
  		play 'org.webjars:dojo:1.10.0'
  		play "com.typesafe.akka:akka-remote_${scalaAbiVersion}:${akkaVersion}"
  		play 'org.pegdown:pegdown:1.5.0'
		play('org.apache.zookeeper:zookeeper:3.4.5') {
			exclude group: 'javax.jms', module: 'jms'
			exclude group: 'com.sun.jdmk', module: 'jmxtools'
			exclude group: 'com.sun.jmx', module: 'jmxri'
			exclude group: 'org.jboss.netty', module: 'netty'
		}
  		play 'org.webjars:ace:01.08.2014'
	}
}

gradle.addListener(new TimingListener())