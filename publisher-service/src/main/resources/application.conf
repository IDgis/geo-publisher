publisher.service {

	akka {
		io.tcp.windows-connection-abort-workaround-enabled = false
	
		actor {
			provider = "akka.remote.RemoteActorRefProvider"
		}

		remote {
			enabled-transports = ["akka.remote.netty.tcp"]
			netty.tcp {
				hostname = "127.0.0.1"
				port = 2552
			}
		}
		
		loggers = ["akka.event.slf4j.Slf4jLogger"]		
		loglevel = "INFO"
	}
	
	raster {
		folder = ""
	}
	
	database {
		url = "jdbc:postgresql://localhost:5432/publisher"
		templates = "nl.idgis.publisher.database.ExtendedPostgresTemplates"
		user = "postgres"
		password = "postgres"	
	}
	
	geoserver {
		url = "http://localhost:8080/geoserver/"
		user = "admin"
		password = "geoserver"
	}
	
	harvester {
		name = "my-harvester-name"
	
		port = 4242
		
		ssl {
			private {
				file = "private.jks"
				password = "harvester"
			}
			
			trusted {
				file = "trusted.jks"
				password = "harvester"
			}
		}
	}
	
	metadata {
		serviceSource = "serviceSource"
	
		datasetTarget = "datasetTarget"
		serviceTarget = "serviceTarget"
		
		generator-constants {
			operatesOn {
			    href = "https://overijssel.geo-hosting.nl/metadata/dataset/"
			}
			onlineResource {
			    wms = "https://overijssel.geo-hosting.nl/geoserver/wms?"
			    wfs = "https://overijssel.geo-hosting.nl/geoserver/wfs?"
			}
		}
	}
	
	monitor.showTrees = true
	
	zooKeeper {
		hosts = "localhost:2181"
		namespace = null
		stagingEnvironmentId = "geoserver-staging"
	}
}